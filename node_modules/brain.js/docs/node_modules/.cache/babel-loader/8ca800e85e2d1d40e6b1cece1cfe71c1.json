{"remainingRequest":"/Users/robert.plummer/brain.js/docs/node_modules/thread-loader/dist/cjs.js!/Users/robert.plummer/brain.js/docs/node_modules/babel-loader/lib/index.js!/Users/robert.plummer/brain.js/docs/node_modules/eslint-loader/index.js??ref--13-0!/Users/robert.plummer/brain.js/docs/src/store.js","dependencies":[{"path":"/Users/robert.plummer/brain.js/docs/src/store.js","mtime":1539027794019},{"path":"/Users/robert.plummer/brain.js/docs/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/robert.plummer/brain.js/docs/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert.plummer/brain.js/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert.plummer/brain.js/docs/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    features: [{\n      title: 'Fast & GPU supported'\n    }, {\n      title: 'Easy to Use'\n    }, {\n      title: 'Async API'\n    }, {\n      title: 'Export & Import Trained Models'\n    }, // {\n    //   title: 'Multiple Neural Networks',\n    // },\n    // {\n    //   title: 'Multiple Activation Functions',\n    // },\n    // {\n    //   title: 'Customizeable Hidden Layers',\n    // },\n    {\n      title: 'Cross Validation'\n    }, {\n      title: 'Stream Training'\n    }, // {\n    //   title: 'Customizeable',\n    // },\n    {\n      title: 'Modular'\n    }],\n    highlights: [{\n      title: 'Simple',\n      description: 'Brain.js is super simple to use. You do not need to know Neural Networks in details to work with this. ',\n      link: '//github.com/BrainJS/brain.js#examples'\n    }, {\n      title: 'Fast',\n      description: 'Brain.js performs computations using GPU and gracefully fallback to pure JavaSCript in Node.js or when GPU is not available.',\n      link: '//github.com/gpujs/gpu.js'\n    }, {\n      title: 'Useful',\n      description: 'Brain.js provided multiple neural network implementations as different neural nets suited to do different things well.',\n      link: '//github.com/BrainJS/brain.js#neural-network-types'\n    }, // {\n    //   title: 'Activation Functions',\n    //   description:\n    //     'There are currently four supported activation functions, sigmoid being the default: sigmoid,relu,leaky-relu,tanh',\n    //   link: '//github.com/BrainJS/brain.js#json',\n    // },\n    {\n      title: 'Easy',\n      description: 'Easily export and import trained models to JSON format and as a function. Host pre-trained models on your website easily. ',\n      link: '//github.com/BrainJS/brain.js#json'\n    }],\n    networks: [{\n      title: 'brain.NeuralNetwork',\n      description: 'Feedforward Neural Network with backpropagation',\n      link: 'https://en.wikipedia.org/wiki/Feedforward_neural_network'\n    }, {\n      title: 'brain.recurrent.RNNTimeStep',\n      description: 'Time Step Recurrent Neural Network or \"RNN\"',\n      link: 'https://en.wikipedia.org/wiki/Recurrent_neural_network'\n    }, {\n      title: 'brain.recurrent.LSTMTimeStep',\n      description: 'Time Step Long Short Term Memory Neural Network or \"LSTM\"',\n      link: 'https://en.wikipedia.org/wiki/Long_short-term_memory'\n    }, {\n      title: 'brain.recurrent.GRUTimeStep',\n      description: 'Time Step Gated Recurrent Unit or \"GRU\"',\n      link: 'https://en.wikipedia.org/wiki/Gated_recurrent_unit'\n    }, {\n      title: 'brain.recurrent.RNN',\n      description: 'Recurrent Neural Network or \"RNN\"',\n      link: 'https://en.wikipedia.org/wiki/Recurrent_neural_network'\n    }, {\n      title: 'brain.recurrent.LSTM',\n      description: 'Long Short Term Memory Neural Network or \"LSTM\"',\n      link: 'https://en.wikipedia.org/wiki/Long_short-term_memory'\n    }, {\n      title: 'brain.recurrent.GRU',\n      description: 'Gated Recurrent Unit or \"GRU\"',\n      link: 'https://en.wikipedia.org/wiki/Gated_recurrent_unit'\n    }],\n    tutorials: [{\n      title: 'How to create a neural net in the browser with Brain.js',\n      description: '',\n      author: 'Per Harald Borgen',\n      link: 'https://scrimba.com/c/c36zkcb'\n    }, {\n      title: 'BRAIN.JS: NEURAL NETWORKS IN JAVASCRIPT',\n      description: '',\n      author: 'http://badassjs.com',\n      link: 'http://badassjs.com/post/729676907/brainjs-neural-networks-in-javascript'\n    }, {\n      title: 'Neural Networks in JavaScript with Brain.js',\n      description: '',\n      author: 'Scott Robinson',\n      link: 'https://stackabuse.com/neural-networks-in-javascript-with-brain-js/'\n    }, {\n      title: 'You can build a neural network in JavaScript',\n      description: '',\n      author: 'Daniel Simmons',\n      link: 'https://itnext.io/you-can-build-a-neural-network-in-javascript-even-if-you-dont-really-understand-neural-networks-e63e12713a3'\n    }],\n    examples: [{\n      title: 'XOR function',\n      description: \"Here's an example showcasing how to approximate the XOR function.\",\n      link: '//jsfiddle.net/mubaidr/efLq26xd/2/embedded/js,result/'\n    }, {\n      title: 'Simple Letter Detection',\n      description: 'Detect letters from text.',\n      link: '//jsfiddle.net/mubaidr/79Lkqsb5/2/embedded/js,result/'\n    }, {\n      title: 'Childrens Book',\n      description: \"Writing a children's book using a recurrent neural network.\",\n      link: '//jsfiddle.net/mubaidr/zdLh6bsn/3/embedded/js,result/'\n    }, {\n      title: 'Color Contrast',\n      description: 'Get suitable text color for given background color.',\n      link: '//jsfiddle.net/mubaidr/9vcqrb0p/1/embedded/js,result/'\n    }, {\n      title: 'Guess Number',\n      description: 'Guess next number in series.',\n      link: '//jsfiddle.net/mubaidr/8yeo2jmd/1/embedded/js,result/'\n    }]\n  },\n  mutations: {},\n  actions: {}\n});",{"version":3,"sources":["/Users/robert.plummer/brain.js/docs/src/store.js"],"names":["Vue","Vuex","use","Store","state","features","title","highlights","description","link","networks","tutorials","author","examples","mutations","actions"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,IAAIE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,KAAKE,KAAT,CAAe;AAC5BC,SAAO;AACLC,cAAU,CACR;AACEC,aAAO;AADT,KADQ,EAIR;AACEA,aAAO;AADT,KAJQ,EAOR;AACEA,aAAO;AADT,KAPQ,EAUR;AACEA,aAAO;AADT,KAVQ,EAaR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEA,aAAO;AADT,KAtBQ,EAyBR;AACEA,aAAO;AADT,KAzBQ,EA4BR;AACA;AACA;AACA;AACEA,aAAO;AADT,KA/BQ,CADL;AAoCLC,gBAAY,CACV;AACED,aAAO,QADT;AAEEE,mBACE,yGAHJ;AAIEC,YAAM;AAJR,KADU,EAOV;AACEH,aAAO,MADT;AAEEE,mBACE,8HAHJ;AAIEC,YAAM;AAJR,KAPU,EAaV;AACEH,aAAO,QADT;AAEEE,mBACE,wHAHJ;AAIEC,YAAM;AAJR,KAbU,EAmBV;AACA;AACA;AACA;AACA;AACA;AACA;AACEH,aAAO,MADT;AAEEE,mBACE,4HAHJ;AAIEC,YAAM;AAJR,KAzBU,CApCP;AAoELC,cAAU,CACR;AACEJ,aAAO,qBADT;AAEEE,mBAAa,iDAFf;AAGEC,YAAM;AAHR,KADQ,EAMR;AACEH,aAAO,6BADT;AAEEE,mBAAa,6CAFf;AAGEC,YAAM;AAHR,KANQ,EAWR;AACEH,aAAO,8BADT;AAEEE,mBACE,2DAHJ;AAIEC,YAAM;AAJR,KAXQ,EAiBR;AACEH,aAAO,6BADT;AAEEE,mBAAa,yCAFf;AAGEC,YAAM;AAHR,KAjBQ,EAsBR;AACEH,aAAO,qBADT;AAEEE,mBAAa,mCAFf;AAGEC,YAAM;AAHR,KAtBQ,EA2BR;AACEH,aAAO,sBADT;AAEEE,mBAAa,iDAFf;AAGEC,YAAM;AAHR,KA3BQ,EAgCR;AACEH,aAAO,qBADT;AAEEE,mBAAa,+BAFf;AAGEC,YAAM;AAHR,KAhCQ,CApEL;AA0GLE,eAAW,CACT;AACEL,aAAO,yDADT;AAEEE,mBAAa,EAFf;AAGEI,cAAQ,mBAHV;AAIEH,YAAM;AAJR,KADS,EAOT;AACEH,aAAO,yCADT;AAEEE,mBAAa,EAFf;AAGEI,cAAQ,qBAHV;AAIEH,YACE;AALJ,KAPS,EAcT;AACEH,aAAO,6CADT;AAEEE,mBAAa,EAFf;AAGEI,cAAQ,gBAHV;AAIEH,YACE;AALJ,KAdS,EAqBT;AACEH,aAAO,8CADT;AAEEE,mBAAa,EAFf;AAGEI,cAAQ,gBAHV;AAIEH,YACE;AALJ,KArBS,CA1GN;AAuILI,cAAU,CACR;AACEP,aAAO,cADT;AAEEE,mBACE,mEAHJ;AAIEC,YAAM;AAJR,KADQ,EAOR;AACEH,aAAO,yBADT;AAEEE,mBAAa,2BAFf;AAGEC,YAAM;AAHR,KAPQ,EAYR;AACEH,aAAO,gBADT;AAEEE,mBACE,6DAHJ;AAIEC,YAAM;AAJR,KAZQ,EAkBR;AACEH,aAAO,gBADT;AAEEE,mBAAa,qDAFf;AAGEC,YAAM;AAHR,KAlBQ,EAuBR;AACEH,aAAO,cADT;AAEEE,mBAAa,8BAFf;AAGEC,YAAM;AAHR,KAvBQ;AAvIL,GADqB;AAsK5BK,aAAW,EAtKiB;AAuK5BC,WAAS;AAvKmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    features: [\n      {\n        title: 'Fast & GPU supported',\n      },\n      {\n        title: 'Easy to Use',\n      },\n      {\n        title: 'Async API',\n      },\n      {\n        title: 'Export & Import Trained Models',\n      },\n      // {\n      //   title: 'Multiple Neural Networks',\n      // },\n      // {\n      //   title: 'Multiple Activation Functions',\n      // },\n      // {\n      //   title: 'Customizeable Hidden Layers',\n      // },\n      {\n        title: 'Cross Validation',\n      },\n      {\n        title: 'Stream Training',\n      },\n      // {\n      //   title: 'Customizeable',\n      // },\n      {\n        title: 'Modular',\n      },\n    ],\n    highlights: [\n      {\n        title: 'Simple',\n        description:\n          'Brain.js is super simple to use. You do not need to know Neural Networks in details to work with this. ',\n        link: '//github.com/BrainJS/brain.js#examples',\n      },\n      {\n        title: 'Fast',\n        description:\n          'Brain.js performs computations using GPU and gracefully fallback to pure JavaSCript in Node.js or when GPU is not available.',\n        link: '//github.com/gpujs/gpu.js',\n      },\n      {\n        title: 'Useful',\n        description:\n          'Brain.js provided multiple neural network implementations as different neural nets suited to do different things well.',\n        link: '//github.com/BrainJS/brain.js#neural-network-types',\n      },\n      // {\n      //   title: 'Activation Functions',\n      //   description:\n      //     'There are currently four supported activation functions, sigmoid being the default: sigmoid,relu,leaky-relu,tanh',\n      //   link: '//github.com/BrainJS/brain.js#json',\n      // },\n      {\n        title: 'Easy',\n        description:\n          'Easily export and import trained models to JSON format and as a function. Host pre-trained models on your website easily. ',\n        link: '//github.com/BrainJS/brain.js#json',\n      },\n    ],\n    networks: [\n      {\n        title: 'brain.NeuralNetwork',\n        description: 'Feedforward Neural Network with backpropagation',\n        link: 'https://en.wikipedia.org/wiki/Feedforward_neural_network',\n      },\n      {\n        title: 'brain.recurrent.RNNTimeStep',\n        description: 'Time Step Recurrent Neural Network or \"RNN\"',\n        link: 'https://en.wikipedia.org/wiki/Recurrent_neural_network',\n      },\n      {\n        title: 'brain.recurrent.LSTMTimeStep',\n        description:\n          'Time Step Long Short Term Memory Neural Network or \"LSTM\"',\n        link: 'https://en.wikipedia.org/wiki/Long_short-term_memory',\n      },\n      {\n        title: 'brain.recurrent.GRUTimeStep',\n        description: 'Time Step Gated Recurrent Unit or \"GRU\"',\n        link: 'https://en.wikipedia.org/wiki/Gated_recurrent_unit',\n      },\n      {\n        title: 'brain.recurrent.RNN',\n        description: 'Recurrent Neural Network or \"RNN\"',\n        link: 'https://en.wikipedia.org/wiki/Recurrent_neural_network',\n      },\n      {\n        title: 'brain.recurrent.LSTM',\n        description: 'Long Short Term Memory Neural Network or \"LSTM\"',\n        link: 'https://en.wikipedia.org/wiki/Long_short-term_memory',\n      },\n      {\n        title: 'brain.recurrent.GRU',\n        description: 'Gated Recurrent Unit or \"GRU\"',\n        link: 'https://en.wikipedia.org/wiki/Gated_recurrent_unit',\n      },\n    ],\n    tutorials: [\n      {\n        title: 'How to create a neural net in the browser with Brain.js',\n        description: '',\n        author: 'Per Harald Borgen',\n        link: 'https://scrimba.com/c/c36zkcb',\n      },\n      {\n        title: 'BRAIN.JS: NEURAL NETWORKS IN JAVASCRIPT',\n        description: '',\n        author: 'http://badassjs.com',\n        link:\n          'http://badassjs.com/post/729676907/brainjs-neural-networks-in-javascript',\n      },\n      {\n        title: 'Neural Networks in JavaScript with Brain.js',\n        description: '',\n        author: 'Scott Robinson',\n        link:\n          'https://stackabuse.com/neural-networks-in-javascript-with-brain-js/',\n      },\n      {\n        title: 'You can build a neural network in JavaScript',\n        description: '',\n        author: 'Daniel Simmons',\n        link:\n          'https://itnext.io/you-can-build-a-neural-network-in-javascript-even-if-you-dont-really-understand-neural-networks-e63e12713a3',\n      },\n    ],\n    examples: [\n      {\n        title: 'XOR function',\n        description:\n          \"Here's an example showcasing how to approximate the XOR function.\",\n        link: '//jsfiddle.net/mubaidr/efLq26xd/2/embedded/js,result/',\n      },\n      {\n        title: 'Simple Letter Detection',\n        description: 'Detect letters from text.',\n        link: '//jsfiddle.net/mubaidr/79Lkqsb5/2/embedded/js,result/',\n      },\n      {\n        title: 'Childrens Book',\n        description:\n          \"Writing a children's book using a recurrent neural network.\",\n        link: '//jsfiddle.net/mubaidr/zdLh6bsn/3/embedded/js,result/',\n      },\n      {\n        title: 'Color Contrast',\n        description: 'Get suitable text color for given background color.',\n        link: '//jsfiddle.net/mubaidr/9vcqrb0p/1/embedded/js,result/',\n      },\n      {\n        title: 'Guess Number',\n        description: 'Guess next number in series.',\n        link: '//jsfiddle.net/mubaidr/8yeo2jmd/1/embedded/js,result/',\n      },\n    ],\n  },\n  mutations: {},\n  actions: {},\n})\n"]}]}