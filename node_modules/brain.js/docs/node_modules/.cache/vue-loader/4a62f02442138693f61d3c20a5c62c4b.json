{"remainingRequest":"/Users/robert.plummer/brain.js/docs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert.plummer/brain.js/docs/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert.plummer/brain.js/docs/src/views/Home.vue","mtime":1539086147937},{"path":"/Users/robert.plummer/brain.js/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert.plummer/brain.js/docs/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/robert.plummer/brain.js/docs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*globals scrollama */\n\nexport default {\n  components: {},\n\n  data() {\n    return {\n      progress: 0,\n    }\n  },\n\n  computed: {\n    offset() {\n      let offset = Math.abs(0.66 - this.progress) * 250 // max 100 offset\n      if (offset < 0 || this.progress > 0.66) offset = 0\n\n      return offset\n    },\n    leftPart() {\n      return {\n        transform: `translateX(-${this.offset}px)`,\n        opacity: `${1.25 - this.offset / 80}`,\n      }\n    },\n    rightPart() {\n      return {\n        transform: `translateX(${this.offset}px)`,\n        opacity: `${1.25 - this.offset / 80}`,\n      }\n    },\n    bottomPart() {\n      return {\n        transform: `translateY(${this.offset}px)`,\n        opacity: `${1.25 - this.offset / 80}`,\n      }\n    },\n    topPart() {\n      return {\n        transform: `translateY(-${this.offset}px)`,\n        opacity: `${1.25 - this.offset / 80}`,\n      }\n    },\n    featureList() {\n      return this.$store.state.features.map(i => {\n        return i.title\n      })\n    },\n  },\n\n  mounted() {\n    // scroll progress\n    const scroller = scrollama()\n    scroller\n      .setup({\n        step: '#svg-logo-animation',\n        progress: true,\n        threshold: 1,\n        offset: 0.66,\n      })\n      .onStepProgress(e => {\n        this.progress = e.progress\n      })\n\n    //handle window resize\n    window.addEventListener('resize', scroller.resize)\n  },\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwOA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h2 class=\"title is-3\">About Brain.js</h2>\n    <h3\n      class=\"subtitle is-4\">\n      Brain.js is a library of Neural Networks written in JavaScript for Browsers and Node.js. It is super simple to use, you do not need to know Neural Networks in details to work with this.\n    </h3>\n\n    <!-- <br>\n    <br>\n    <div class=\"custom-tags has-text-centered\">\n      <span\n        v-for=\"feature in $store.state.features\"\n        :key=\"feature.title\"\n        class=\"tag is-dark is-medium\">{{ feature.title }}</span>\n    </div> -->\n\n    <br>\n    <br>\n    <!-- <h2 class=\"title is-3\">Highlights</h2>\n    <hr> -->\n    <div class=\"container\">\n      <div class=\"highlight-list\">\n        <article\n          v-for=\"highlight in $store.state.highlights\"\n          :key=\"highlight.title\"\n          class=\"message is-primary\">\n          <!-- <div class=\"message-header\">\n            <p><strong>{{ highlight.title }}</strong></p>\n          </div> -->\n          <div class=\"message-body\">\n            <strong class=\"title is-4\">\n              {{ highlight.title }}\n            </strong>\n            <br>\n            <br>\n            {{ highlight.description }}\n            <br><br>\n            <a\n              v-show=\"highlight.link\"\n              :href=\"highlight.link\">Details</a>\n          </div>\n        </article>\n      </div>\n    </div>\n\n\n    <br>\n    <br>\n    <br>\n    <div\n      class=\"content has-text-centered\">\n      <div\n        id=\"svg-logo-animation-container\"\n        ref=\"svg-logo-animation-container\">\n\n        <h2 class=\"title is-3\">Modular</h2>\n        <h3 class=\"subtitle is-5\">Brain.js implmentation is highly modular to easily allow extendability. </h3>\n\n\n        <div\n          id=\"svg-logo-animation\"\n          ref=\"svg-logo-animation\">\n\n          <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            viewBox=\"0 0 200 200\">\n            <rect\n              width=\"100%\"\n              height=\"100%\"\n              fill=\"#F3DF49\"/>\n            <g class=\"logo-parts\">\n              <polygon\n                :style=\"leftPart\"\n                fill=\"#2E2E2C\"\n                points=\"104.8,110.4 134.1,133.6 134.1,148.7 94.8,163.9 74.3,164.9 58.5,143.7 73.4,123.3\"/>\n              <polygon\n                :style=\"rightPart\"\n                fill=\"#2E2E2C\"\n                points=\"139.4,148.7 139.4,133.6 134.3,104.4 148.4,103.5 185,126 180.5,153.6 166.4,164\"/>\n              <polygon\n                :style=\"bottomPart\"\n                fill=\"#2E2E2C\"\n                points=\"163.1,167.6 137.3,153.2 101.3,166.6 142.8,177.7 148.4,186.2 155.2,186.2\"/>\n              <polygon\n                :style=\"topPart\"\n                fill=\"#2E2E2C\"\n                points=\"111.1,108.3 133.5,127 128.9,105.3\"/>\n            </g>\n          </svg>\n\n        </div>\n        <p class=\"title is-5\">Modular networks to quickly prototype networks, like: FeedForward, TimeStep, Recurrent, Streaming, CrossValidation</p>\n      </div>\n    </div>\n\n    <br>\n    <br>\n    <br>\n\n    <article class=\"message is-info\">\n      <div class=\"message-body\">\n        <span class=\"title is-5\">GPU support for Node.js coming soon!</span>\n        <br>\n        Brain.js is being worked on to enable GPU driven computation support for <strong>Node.js</strong>\n      </div>\n    </article>\n\n\n    <br>\n    <hr>\n    <br>\n    <div class=\"columns has-text-centered\">\n      <div class=\"column\">\n        <h2 class=\"title is-3\">\n          Ready to start?\n        </h2>\n        <div class=\"content\">\n          <p>Read\n            <a href=\"http://github.com/BrainJS/brain.js#brainjs\">Documentation</a>\n            or view <router-link\n              to=\"/examples\"\n              title=\"Examples\"\n              class=\"\">\n              Live Examples\n            </router-link>\n          </p>\n          <router-link\n            to=\"/getting-started\"\n            class=\"button is-primary is-large\"\n            title=\"Installation & Quick Start\">\n            Get Started Now\n          </router-link>\n        </div>\n      </div>\n\n      <div class=\"column\">\n        <h2 class=\"title is-3\">\n          Support\n        </h2>\n        <div class=\"content\">\n          <p>Support this project by becoming a Sponsor or Backer. </p>\n          <router-link\n            to=\"//opencollective.com/brainjs#sponsor\"\n            title=\"Sponsor\"\n            class=\"button is-primary is-large\">\n            Become a Sponsor\n          </router-link>\n        </div>\n      </div>\n\n      <div class=\"column\">\n        <h2 class=\"title is-3\">\n          Be a Part of Brain.js\n        </h2>\n        <div class=\"content\">\n          <p>Contrinutions are always welcome!</p>\n          <a\n            href=\"//github.com/BrainJS/brain.js/blob/master/CONTRIBUTING.md\"\n            class=\"button is-primary is-large\"\n            title=\"Github Repository\"\n            target=\"_blank\">\n            Contribute\n          </a>\n        </div>\n      </div>\n    </div>\n\n    <br>\n    <hr>\n    <br>\n\n    <div class=\"content has-text-centered\">\n      <h2 class=\"title is-3\">Sponsors/ Backers</h2>\n      <p>Thank you to all our Sponsors and Backers! üôè</p>\n      <p>\n        <a\n          href=\"https://opencollective.com/brainjs/sponsor/0/website\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/sponsor/0/avatar.svg\"></a>\n        <a\n          href=\"https://opencollective.com/brainjs/sponsor/1/website\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/sponsor/1/avatar.svg\"></a>\n        <a\n          href=\"https://opencollective.com/brainjs/sponsor/2/website\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/sponsor/2/avatar.svg\"></a>\n        <a\n          href=\"https://opencollective.com/brainjs/sponsor/3/website\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/sponsor/3/avatar.svg\"></a>\n        <a\n          href=\"https://opencollective.com/brainjs/sponsor/4/website\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/sponsor/4/avatar.svg\"></a>\n        <a\n          href=\"https://opencollective.com/brainjs/sponsor/5/website\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/sponsor/5/avatar.svg\"></a>\n        <a\n          href=\"https://opencollective.com/brainjs/sponsor/6/website\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/sponsor/6/avatar.svg\"></a>\n        <a\n          href=\"https://opencollective.com/brainjs/sponsor/7/website\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/sponsor/7/avatar.svg\"></a>\n        <a\n          href=\"https://opencollective.com/brainjs/sponsor/8/website\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/sponsor/8/avatar.svg\"></a>\n        <a\n          href=\"https://opencollective.com/brainjs/sponsor/9/website\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/sponsor/9/avatar.svg\"></a>\n\n        <br>\n        <a\n          href=\"https://opencollective.com/brainjs#backers\"\n          target=\"_blank\"><img src=\"https://opencollective.com/brainjs/backers.svg?width=890\"></a>\n      </p>\n    </div>\n\n    <br>\n    <hr>\n    <br>\n\n    <div class=\"content has-text-centered\">\n      <h2 class=\"title is-3\">Contributors</h2>\n      <p>This project exists thanks to all the people who contribute.<br><br>\n      <a href=\"graphs/contributors\"><img src=\"https://opencollective.com/brainjs/contributors.svg?width=890&button=false\" ></a></p>\n    </div>\n\n    <br>\n\n  </div>\n</template>\n\n<script>\n/*globals scrollama */\n\nexport default {\n  components: {},\n\n  data() {\n    return {\n      progress: 0,\n    }\n  },\n\n  computed: {\n    offset() {\n      let offset = Math.abs(0.66 - this.progress) * 250 // max 100 offset\n      if (offset < 0 || this.progress > 0.66) offset = 0\n\n      return offset\n    },\n    leftPart() {\n      return {\n        transform: `translateX(-${this.offset}px)`,\n        opacity: `${1.25 - this.offset / 80}`,\n      }\n    },\n    rightPart() {\n      return {\n        transform: `translateX(${this.offset}px)`,\n        opacity: `${1.25 - this.offset / 80}`,\n      }\n    },\n    bottomPart() {\n      return {\n        transform: `translateY(${this.offset}px)`,\n        opacity: `${1.25 - this.offset / 80}`,\n      }\n    },\n    topPart() {\n      return {\n        transform: `translateY(-${this.offset}px)`,\n        opacity: `${1.25 - this.offset / 80}`,\n      }\n    },\n    featureList() {\n      return this.$store.state.features.map(i => {\n        return i.title\n      })\n    },\n  },\n\n  mounted() {\n    // scroll progress\n    const scroller = scrollama()\n    scroller\n      .setup({\n        step: '#svg-logo-animation',\n        progress: true,\n        threshold: 1,\n        offset: 0.66,\n      })\n      .onStepProgress(e => {\n        this.progress = e.progress\n      })\n\n    //handle window resize\n    window.addEventListener('resize', scroller.resize)\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.custom-tags\n  .tag\n    margin-right: 0.5em\n    margin-bottom: 0.5em\n\n#svg-logo-animation-container\n  #svg-logo-animation\n    background-color: #f3df49\n    svg\n      max-width: 640px\n    .logo-parts\n      transform: translateX(-25px) translateY(-42px)\n\n.vue-swimlane\n  // border: 2px solid whitesmoke\n  li\n    // background-color: black\n    color: #f3df49\n</style>\n"]}]}